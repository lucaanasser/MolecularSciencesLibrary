const jwt = require('jsonwebtoken');
const SECRET = process.env.JWT_SECRET || 'sua_chave_secreta';

/**
 * Middleware para autentica칞칚o de token JWT.
 * Padr칚o de logs:
 * 游댯 In칤cio de opera칞칚o
 * 游릭 Sucesso
 * 游리 Aviso/Fluxo alternativo
 * 游댮 Erro
 */
function authenticateToken(req, res, next) {
    const authHeader = req.headers['authorization'];
    const token = authHeader && authHeader.split(' ')[1];
    if (!token) {
        console.warn('游리 [authenticateToken] Token n칚o fornecido');
        return res.status(401).json({ error: 'Token n칚o fornecido' });
    }

    jwt.verify(token, SECRET, (err, user) => {
        if (err) {
            console.error('游댮 [authenticateToken] Token inv치lido:', err.message);
            return res.status(403).json({ error: 'Token inv치lido' });
        }
        console.log('游릭 [authenticateToken] Token v치lido, usu치rio autenticado:', user);
        req.user = user;
        next();
    });
}

module.exports = authenticateToken;