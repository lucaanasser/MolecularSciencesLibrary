const express = require('express');
const router = express.Router();
const usersController = require('../controllers/UsersController');
const authenticateToken = require('../middlewares/authenticateToken');

/**
 * Rotas relacionadas a usu치rios.
 * Inclui autentica칞칚o, cria칞칚o, busca, listagem, dele칞칚o e perfil do usu치rio autenticado.
 * 
 * Padr칚o de logs:
 * 游댯 In칤cio de opera칞칚o
 * 游릭 Sucesso
 * 游리 Aviso/Fluxo alternativo
 * 游댮 Erro
 */

// Rota de perfil do usu치rio autenticado (DEVE vir antes de /:id)
router.get('/me', authenticateToken, (req, res) => {
    console.log("游댯 [UsersRoutes] GET /me - Perfil do usu치rio autenticado");
    usersController.getProfile(req, res);
});

// Atualizar imagem de perfil do usu치rio autenticado
router.put('/me/profile-image', authenticateToken, (req, res) => {
    console.log("游댯 [UsersRoutes] PUT /me/profile-image - Atualizar imagem de perfil");
    usersController.updateProfileImage(req, res);
});

// Buscar usu치rio por ID
router.get('/:id', (req, res) => {
    console.log("游댯 [UsersRoutes] GET /:id - Buscar usu치rio por ID:", req.params.id);
    usersController.getUserById(req, res);
});

// Rota para criar usu치rio (apenas admin deve poder usar na aplica칞칚o)
router.post('/', (req, res) => {
    console.log("游댯 [UsersRoutes] POST / - Criar novo usu치rio");
    usersController.createUser(req, res);
});

// Rota para autentica칞칚o (login)
router.post('/login', (req, res) => {
    console.log("游댯 [UsersRoutes] POST /login - Autentica칞칚o de usu치rio");
    usersController.authenticateUser(req, res);
});

// Solicitar redefini칞칚o de senha
router.post('/forgot-password', (req, res) => {
    console.log("游댯 [UsersRoutes] POST /forgot-password - Solicitar redefini칞칚o de senha");
    usersController.requestPasswordReset(req, res);
});

// Redefinir senha
router.post('/reset-password', (req, res) => {
    console.log("游댯 [UsersRoutes] POST /reset-password - Redefinir senha");
    usersController.resetPassword(req, res);
});

// Listar todos os usu치rios (apenas admin)
router.get('/', (req, res) => {
    console.log("游댯 [UsersRoutes] GET / - Listar todos os usu치rios");
    usersController.getAllUsers(req, res);
});

// Deletar usu치rio por ID (apenas admin)
router.delete('/:id', (req, res) => {
    console.log("游댯 [UsersRoutes] DELETE /:id - Deletar usu치rio por ID:", req.params.id);
    usersController.deleteUserById(req, res);
});

module.exports = router;