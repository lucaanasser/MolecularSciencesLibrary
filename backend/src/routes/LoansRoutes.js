const express = require('express');
const router = express.Router();
const LoansController = require('../controllers/LoansController');

/**
 * Rotas relacionadas a emprÃ©stimos de livros.
 * PadrÃ£o de logs:
 * ğŸ”µ InÃ­cio de operaÃ§Ã£o
 * ğŸŸ¢ Sucesso
 * ğŸŸ¡ Aviso/Fluxo alternativo
 * ğŸ”´ Erro
 */

// Criar emprÃ©stimo
router.post('/', (req, res) => {
    console.log("ğŸ”µ [LoansRoutes] POST / - Criar novo emprÃ©stimo");
    LoansController.borrowBook(req, res);
});

// Listar todos os emprÃ©stimos
router.get('/', (req, res) => {
    console.log("ğŸ”µ [LoansRoutes] GET / - Listar todos os emprÃ©stimos");
    LoansController.listLoans(req, res);
});

// Listar emprÃ©stimos de um usuÃ¡rio especÃ­fico
router.get('/user/:userId', (req, res) => {
    console.log(`ğŸ”µ [LoansRoutes] GET /user/${req.params.userId} - Listar emprÃ©stimos do usuÃ¡rio`);
    LoansController.listLoansByUser(req, res);
});

// Registrar devoluÃ§Ã£o
router.post('/return', (req, res) => {
    console.log("ğŸ”µ [LoansRoutes] POST /return - Registrar devoluÃ§Ã£o de emprÃ©stimo");
    LoansController.returnBook(req, res);
});

// Listar emprÃ©stimos ativos com status de atraso
router.get('/active', (req, res) => {
    console.log("ğŸ”µ [LoansRoutes] GET /active - Listar emprÃ©stimos ativos com status de atraso");
    LoansController.listActiveLoansWithOverdue(req, res);
});

// Renovar emprÃ©stimo
router.put('/:id/renew', (req, res) => {
    console.log('ğŸ”µ [LoansRoutes] PUT /:id/renew - Renovar emprÃ©stimo');
    LoansController.renewLoan(req, res);
});

// Preview da renovaÃ§Ã£o
router.post('/:id/preview-renew', (req, res) => {
    console.log('ğŸ”µ [LoansRoutes] POST /:id/preview-renew - Preview renovaÃ§Ã£o');
    LoansController.previewRenewLoan(req, res);
});

// Listar emprÃ©stimos ativos de um usuÃ¡rio especÃ­fico
router.get('/user/:userId/active', (req, res) => {
    console.log(`ğŸ”µ [LoansRoutes] GET /user/${req.params.userId}/active - Listar emprÃ©stimos ativos do usuÃ¡rio`);
    LoansController.listActiveLoansByUser(req, res);
});

// ExtensÃ£o - preview
router.post('/:id/preview-extend', (req, res) => {
    console.log('ğŸ”µ [LoansRoutes] POST /:id/preview-extend - Preview extensÃ£o');
    LoansController.previewExtendLoan(req, res);
});
// ExtensÃ£o - aplicar
router.put('/:id/extend', (req, res) => {
    console.log('ğŸ”µ [LoansRoutes] PUT /:id/extend - Estender emprÃ©stimo');
    LoansController.extendLoan(req, res);
});

// Solicitar extensÃ£o
router.post('/:id/request-extension', LoansController.requestExtension);

module.exports = router;