import { ReactNode } from "react";
import { Navigate, useLocation } from "react-router-dom";

/**
 * Rota protegida por autentica칞칚o e autoriza칞칚o.
 * Padr칚o de logs:
 * 游댯 In칤cio de opera칞칚o
 * 游릭 Sucesso
 * 游리 Aviso/Fluxo alternativo
 * 游댮 Erro
 */
interface ProtectedRouteProps {
  children: ReactNode;
  allowedRoles?: string[];
}

const ProtectedRoute = ({ children, allowedRoles }: ProtectedRouteProps) => {
  const location = useLocation();
  const userStr = localStorage.getItem("user");
  const user = userStr ? JSON.parse(userStr) : null;

  // N칚o autenticado
  if (!user || !user.token) {
    console.warn("游리 [ProtectedRoute] Usu치rio n칚o autenticado. Redirecionando para login.");
    return <Navigate to="/entrar" state={{ from: location }} replace />;
  }

  // N칚o autorizado
  if (allowedRoles && !allowedRoles.includes(user.role)) {
    console.warn("游리 [ProtectedRoute] Usu치rio n칚o autorizado. Redirecionando para home.");
    return <Navigate to="/" replace />;
  }

  // Autenticado e autorizado
  console.log("游릭 [ProtectedRoute] Usu치rio autenticado e autorizado:", user);
  return <>{children}</>;
};

export default ProtectedRoute;