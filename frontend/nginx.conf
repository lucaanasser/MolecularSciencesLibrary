server {
    listen 80;
    server_name bibliotecamoleculares.com www.bibliotecamoleculares.com;

    # Permitir validação HTTP do Certbot
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # Redireciona tudo para HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl http2;
    server_name bibliotecamoleculares.com www.bibliotecamoleculares.com;

    # Caminhos dos certificados Let's Encrypt
    ssl_certificate     /etc/nginx/ssl/live/bibliotecamoleculares.com/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/live/bibliotecamoleculares.com/privkey.pem;

    # Configurações de segurança TLS
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Headers de segurança recomendados
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options DENY;
    add_header X-XSS-Protection "1; mode=block";
    add_header Referrer-Policy "strict-origin-when-cross-origin";

    # Diretório raiz (frontend)
    root /usr/share/nginx/html;
    index index.html;

    # Manifest
    location = /manifest.json {
        try_files $uri =404;
        add_header Content-Type application/manifest+json;
    }

    # Service Worker
    location = /service-worker.js {
        try_files $uri =404;
        add_header Content-Type application/javascript;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma no-cache;
        add_header Expires 0;
    }

    # Frontend estático
    location / {
        try_files $uri $uri/ /index.html;
    }

    # Cache para assets estáticos
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # Proxy para backend API
    location /api/ {
        proxy_pass http://backend:3001;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    # Logs
    access_log /var/log/nginx/access.log;
    error_log  /var/log/nginx/error.log;
}
