services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    volumes:
      - ./backend:/app/backend
      - ./database:/app/database
      - ./ssl:/app/ssl
    env_file:
      - ./backend/.env
    environment:
      - FRONTEND_URL=https://bibliotecamoleculares.com
      - DEBUG=True
      - DATABASE_URL=sqlite:///app/database/library.db
      - NODE_EXTRA_CA_CERTS=/etc/ssl/certs/ca-certificates.crt
      - NODE_OPTIONS=--use-openssl-ca
    user: "node"
    entrypoint: ["/bin/sh", "-c", "mkdir -p /app/database && node src/database/initDb.js && node src/main.js"]

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./ssl:/etc/letsencrypt
      - ./frontend:/var/www/certbot
    depends_on:
      - backend

  cron:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: ["sh", "-c", "sleep 30 && while true; do node scripts/checkOverdues.js; sleep 86400; done"]
    volumes:
      - ./database:/app/database
    environment:
      - DATABASE_URL=sqlite:///app/database/library.db
      - SQLITE_BUSY_TIMEOUT=30000
    depends_on:
      - backend

  certbot:
    image: certbot/certbot
    volumes:
      - ./ssl:/etc/letsencrypt
      - ./frontend:/var/www/certbot
    command: >
      sh -c "trap exit TERM; while true; do certbot renew --webroot -w /var/www/certbot && nginx -s reload; sleep 86400; done"
    depends_on:
      - frontend
